name: Spark Cluster Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: CT
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scala_version: [ '2.12.11' ]
        spark_version: [ '3.4.0' ]
        use_copy_unload: [ 'true' ]
        cloud_provider: [ 'gcp' ]
    env:
        SNOWFLAKE_TEST_CONFIG_SECRET: ${{ secrets.SNOWFLAKE_TEST_CONFIG_SECRET }}
        TEST_SPARK_VERSION: '3.4'
        DOCKER_IMAGE_TAG: 'snowflakedb/spark-base:3.4.0'
        TEST_SCALA_VERSION: '2.12'
        TEST_COMPILE_SCALA_VERSION: '2.12.11'
        TEST_SPARK_CONNECTOR_VERSION: '2.15.0'
        TEST_JDBC_VERSION: '3.13.30'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: The test depens on GITHUB_RUN_ID and GITHUB_SHA
      run: echo GITHUB_RUN_ID=${GITHUB_RUN_ID} GITHUB_SHA=${GITHUB_SHA} SCALA=$TEST_SCALA_VERSION SCALA_COMPILE=$TEST_COMPILE_SCALA_VERSION SPARK_CONN=$TEST_SPARK_CONNECTOR_VERSION SPARK=$TEST_SPARK_VERSION JDBC=$TEST_JDBC_VERSION
    - name: Build docker image for spark base
      run: .github/docker/build_image.sh
    - name: Run docker-compose test
      run: docker-compose -f .github/docker/docker-compose.yml up -d
    - name: Decrypt snowflake.json for testing
      run: ./.github/scripts/decrypt_secret.sh snowflake.travis.json snowflake.travis.json.gpg
    - name: Wait test done and check result
      run: .github/docker/check_result.sh
    - name: Clean up the container and image
      run: .github/docker/cleanup_docker.sh
